{
  "variables": {
    "compose_version": "1.25.4",
    "maven_version": "3.6.3"
  },
  "builders": [
    {
      "type": "azure-arm",
      "vm_size": "Standard_DS2_v2",
      "os_type": "Linux",
      "image_publisher": "Canonical",
      "image_offer": "UbuntuServer",
      "image_sku": "18.04-LTS",

      "client_id": "{{user `client_id`}}",
      "client_secret": "{{user `client_secret`}}",
      "subscription_id": "{{user `subscription_id`}}",

      "location": "{{user `location`}}",
      "managed_image_name": "jenkins-agent-ubuntu1804-{{isotime \"20060102150405\"}}",
      "managed_image_resource_group_name": "{{user `resource_group_name`}}",
      "azure_tags": {
        "timestamp": "{{isotime \"20060102150405\"}}",
        "imagetype": "jenkins-agent-ubuntu18.04"
      }
    }
  ],
  "provisioners": [{
    "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
    "inline": [
      "useradd -u 1000 -m -G docker jenkins",
      "apt-get update",
      "apt-get upgrade -y",
      "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -",
      "add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable'",
      "apt-get -y install docker-ce openjdk-8-jdk openjdk-11-jdk make zip",
      "curl -L https://github.com/docker/compose/releases/download/{{user `compose_version`}}/docker-compose-Linux-x86_64 -o /usr/local/bin/docker-compose",
      "curl https://archive.apache.org/dist/maven/maven-3/{{user `maven_version`}}/binaries/apache-maven-{{user `maven_version`}}-bin.tar.gz -o /tmp/apache-maven-{{user `maven_version`}}-bin.tar.gz",
      "tar zxf /tmp/apache-maven-{{user `maven_version`}}-bin.tar.gz -C /usr/share/",
      "ln -s /usr/share/apache-maven-{{user `maven_version`}}/bin/mvn /usr/bin/mvn",
      "rm -f /tmp/apache-maven-{{user `maven_version`}}-bin.tar.gz",
      "mkdir -p  /mnt/agent-workspace/.m2",
      "chown -R jenkins:jenkins /mnt/agent-workspace",
      "/mnt/agent-workspace/.m2 /home/jenkins/.m2",
      "/usr/sbin/waagent -force -deprovision+user && export HISTSIZE=0 && sync"
    ],
    "inline_shebang": "/bin/sh -x",
    "type": "shell"
  }],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true
    }
  ]
}
